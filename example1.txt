1.

Unique users per day
SELECT STRFTIME_UTC_USEC(unixTimestamp, "%d") as day, COUNT_DISTINCT(browserId) as totalCount
FROM [piano-academy:riso_dataset.logs_7qx5egZQFY_201606_copy]
GROUP BY day
ORDER BY day

Page views per day
SELECT STRFTIME_UTC_USEC(unixTimestamp, "%d") as day, COUNT(*) as pageViews
FROM [piano-academy:riso_dataset.logs_7qx5egZQFY_201606_copy]
GROUP BY day
ORDER BY day

Unique users total
SELECT COUNT_DISTINCT(browserId) as uniqueUsers
FROM [piano-academy:riso_dataset.logs_7qx5egZQFY_201606_copy]

Page views per month
SELECT COUNT(*) as pageViews
FROM [piano-academy:riso_dataset.logs_7qx5egZQFY_201606_copy]

3.

unique articles

SELECT COUNT(*)
FROM (
  SELECT COUNT_DISTINCT(url), REGEXP_EXTRACT(url, r'-([A-Z]{2}[0-9]+)') AS r
  FROM [piano-academy:riso_dataset.logs_7qx5egZQFY_201606_copy]
  WHERE contentAuthor <> ''
  GROUP BY r
)

SELECT COUNT_DISTINCT(url)
FROM [piano-academy:riso_dataset.logs_7qx5egZQFY_201606_copy]
WHERE NOT (REGEXP_MATCH(HOST(url), r'elcolombiano'))

4.

SELECT MIN(unixTimestamp) as t, url
FROM [piano-academy:riso_dataset.logs_7qx5egZQFY_201606_copy]
WHERE contentCreated is null
GROUP BY url

create new tables for task 5-more

create unique articles

SELECT url, contentCreated, contentAuthor, contentSection, clicks, uniqueUsers
FROM
  (SELECT url, contentCreated, contentAuthor, contentSection, clicks, uniqueUsers
    FROM (
    SELECT 
        FIRST(url) as url,
        COUNT(url) as clicks,
        COUNT_DISTINCT(browserId) as uniqueUsers,
        COALESCE(FIRST(contentCreated), MIN(unixTimestamp)) as contentCreated,
        FIRST(contentAuthor) as contentAuthor,
        FIRST(contentSection) as contentSection,
        REGEXP_EXTRACT(url, r'-([A-Z]{2}[0-9]+)') AS commonFeature
    FROM [piano-academy:riso_dataset.logs_7qx5egZQFY_201606_copy]
    WHERE contentAuthor <> ''
    GROUP BY commonFeature
  )),
  (SELECT url,
    COUNT(url) as clicks,
    COUNT_DISTINCT(browserId) as uniqueUsers,
    COALESCE(FIRST(contentCreated), MIN(unixTimestamp)) as contentCreated,
    FIRST(contentAuthor) as contentAuthor,
    FIRST(contentSection) as contentSection,
  FROM [piano-academy:riso_dataset.logs_7qx5egZQFY_201606_copy]
  WHERE NOT (REGEXP_MATCH(HOST(url), r'elcolombiano'))
  GROUP BY url)

create articles

SELECT 
  url,
  COALESCE(FIRST(contentCreated), MIN(unixTimestamp)) as contentCreated,
  FIRST(contentAuthor) as contentAuthor,
  FIRST(contentSection) as contentSection,
  COUNT(url) as clicks,
  COUNT_DISTINCT(browserId) as uniqueUsers
FROM [piano-academy:riso_dataset.logs_7qx5egZQFY_201606_copy]
WHERE contentAuthor <> ''
GROUP BY url

5.

weekends

SELECT SUM(c) as weekends
FROM (
  SELECT DAYOFWEEK(contentCreated) as d, count(*) as c
  FROM [piano-academy:riso_dataset.uniqueArticles]
  GROUP BY d
)
WHERE d = 1 OR d = 7

weekdays

SELECT SUM(c) as weekends
FROM (
  SELECT DAYOFWEEK(contentCreated) as d, count(*) as c
  FROM [piano-academy:riso_dataset.uniqueArticles]
  GROUP BY d
)
WHERE d <> 1 OR d <> 7

6.

Known authors distribution

SELECT contentAuthor, count(*) as c
FROM [piano-academy:riso_dataset.uniqueArticles]
WHERE contentAuthor <> ''
GROUP BY contentAuthor
ORDER BY c DESC

Known section distribution

SELECT contentSection, count(*) as c
FROM [piano-academy:riso_dataset.uniqueArticles]
WHERE contentSection <> '' AND contentSection <> '${PubliSectionName}'
GROUP BY contentSection
ORDER BY c DESC

7.

trafic author

SELECT contentAuthor, COUNT(*) as c
FROM [piano-academy:riso_dataset.articles]
WHERE contentAuthor <> ''
GROUP BY contentAuthor
ORDER BY c DESC

trafic section

SELECT contentSection, COUNT(*) as c
FROM [piano-academy:riso_dataset.logs_7qx5egZQFY_201606_copy]
WHERE contentSection <> '' AND contentSection <> '${PubliSectionName}'
GROUP BY contentSection
ORDER BY c DESC

8.

SELECT lessThanTwoTimes, moreThanTwoTimes
FROM
  (SELECT COUNT(*) as moreThanTwoTimes
  FROM [piano-academy:riso_dataset.articles]
  WHERE clicks >= uniqueUsers * 2),
  (SELECT COUNT(*) as lessThanTwoTimes
  FROM [piano-academy:riso_dataset.articles]
  WHERE clicks < uniqueUsers * 2)

